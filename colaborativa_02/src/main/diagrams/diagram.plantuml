@startuml

class Baralho {
    - List<Carta> cartas
    + Baralho()
    + void adicionarCarta(Carta carta)
    + void adicionarCartas(List<Carta> cartas)
    + void shuffle()
    + String toString()
}

class BaralhoUno extends Baralho {
}

class BaralhoTradicional extends Baralho {
}

abstract class Carta {
    protected String face
    protected int valor
    protected String[] cor
    + void setFace(String face)
    + void setValor(int valor)
}

class CartaUno extends Carta {
    + CartaUno(String face, String[] cor, int valor)
    + String toString()
}

class CartaTradicional extends Carta {
    protected String naipe
    + CartaTradicional(String face, String naipe, String[] cor)
    + void setNaipe(String naipe)
    + String toString()
}

interface BaralhoBuilder {
    + void reset()
    + void definirCoresCartas()
    + void definirValoresCartas()
    + void definirAcoesCartas()
    + void definirCartasCoringa()
    + void definirValoresEspeciais()
    + void definirFacesCartas()
    + void definirNaipesCartas()
    + void construirCartasNumericas()
    + void construirCartasAcoes()
    + void construirCartasCoringa()
    + void embaralharCartas()
    + Baralho getResult()
}

class BaralhoUnoBuilder implements BaralhoBuilder {
    - BaralhoUno result
    - CartaFactory cartaFactory
    - String[] cores
    - String[] faces
    - int[] valores
    - String[] acoes
    - String[] coringas
    - Integer[] valoresEspeciais
    + BaralhoUnoBuilder()
    + void reset()
    + void definirNaipesCartas()
    + void definirFacesCartas()
    + void definirCoresCartas()
    + void definirValoresCartas()
    + void definirAcoesCartas()
    + void definirCartasCoringa()
    + void definirValoresEspeciais()
    + void construirCartasNumericas()
    + void construirCartasAcoes()
    + void construirCartasCoringa()
    + void embaralharCartas()
    + BaralhoUno getResult()
}

class BaralhoTradicionalBuilder implements BaralhoBuilder {
    - BaralhoTradicional result
    - CartaFactory cartaFactory
    - String[] faces
    - int[] valores
    - String[] cores
    - String[] naipes
    + BaralhoTradicionalBuilder()
    + void reset()
    + void definirFacesCartas()
    + void definirValoresCartas()
    + void definirAcoesCartas()
    + void definirCartasCoringa()
    + void definirValoresEspeciais()
    + void definirNaipesCartas()
    + void definirCoresCartas()
    + void construirCartasNumericas()
    + void embaralharCartas()
    + BaralhoTradicional getResult()
}

class CartaFactory {
    + static Carta criarCarta(TipoCarta tipo, String face, String naipe, String[] cor, int valor)
}

enum TipoCarta {
    TRADICIONAL, UNO
}

class Diretor {
    - BaralhoBuilder builder
    + Diretor(BaralhoBuilder builder)
    + void changeBuilder(BaralhoBuilder builder)
    + void make(String type)
    + BaralhoBuilder getBuilder()
}

class Main {
    + static void main(String[] args)
}

BaralhoUnoBuilder *-- BaralhoUno
BaralhoTradicionalBuilder *-- BaralhoTradicional
CartaFactory ..> Carta
CartaFactory ..> BaralhoUnoBuilder : "uses"
CartaFactory ..> BaralhoTradicionalBuilder : "uses"

Diretor --> BaralhoBuilder
Main ..> Diretor

@enduml
